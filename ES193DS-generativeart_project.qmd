---
title: "ES193DS-generativeart_project"
author: "Michelle Shteynberg"
date: "2024-05-31"
format: html 
editor: visual
execute: # for all code chunks
    warning: false # do not display warnings
    message: false # do not display messages
---

link to forked repository:
https://github.com/michelle-shteynberg/ES193DS-generativeart.git

### Part 2a. Workshop (structured only)

#### Introductory exercises

Read and complete exercises from “Get Started” ([link](https://art-from-code.netlify.app/day-1/session-1/)). Annotate your code to demonstrate that you know how it works.

#### 1. Exercise 1
```{r}
library(ggplot2)
library(tibble)

mpg |>
  ggplot(aes(displ, hwy, colour = cyl)) + # setting up the aesthetics, color based on cylinder
  geom_point(show.legend = FALSE, size = 6) + # first layer of points, different shades of blue
  geom_point(show.legend = FALSE, size = 2, colour = "pink2") + # second layer of points, pink
  coord_flip() +  # flipping x and y axes
  theme_void() + # minimal theme
  scale_color_gradient() # adding colors as a gradient
  
```

#### 2. Exercise 2
```{r}
polar_art <- function(seed, n, palette) {
  
  # set the state of the random number generator
  set.seed(seed)
  
  # data frame containing random values for 
  # aesthetics we might want to use in the art
  dat <- tibble(
    x0 = runif(n),
    y0 = runif(n),
    x1 = x0 + runif(n, min = -.2, max = .2),
    y1 = y0 + runif(n, min = -.2, max = .2),
    shade = runif(n), 
    size = runif(n)
  )
  
  # plot segments in various colours, using 
  # polar coordinates and a gradient palette
  dat |> 
    ggplot(aes(
      x = x0,
      y = y0,
      xend = x1,
      yend = y1,
      colour = shade,
      size = size
    )) +
    geom_segment(show.legend = FALSE) +
    coord_polar() +
    scale_y_continuous(expand = c(0, 0)) +
    scale_x_continuous(expand = c(0, 0)) + 
    scale_colour_gradientn(colours = palette) + 
    scale_size(range = c(0, 10)) + 
    theme_void()
}

polar_art(
  seed = 4, 
  n = 65, 
  palette = c("deeppink4", "navyblue", "darkseagreen")
)

```
```{r}
polar_art <- function(seed, n, palette) {
  
  # set the state of the random number generator
  set.seed(seed)
  
  # data frame containing random values for 
  # aesthetics we might want to use in the art
  dat <- tibble(
    x0 = runif(n),
    y0 = runif(n),
    x1 = x0 + runif(n, min = -.2, max = .2),
    y1 = y0 + runif(n, min = -.2, max = .2),
    shade = runif(n), 
    size = runif(n)
  )
  
  # plot segments in various colours, using 
  # polar coordinates and a gradient palette
  dat |> 
    ggplot(aes(
      x = x0,
      y = y0,
      xend = x1,
      yend = y1,
      colour = shade,
      size = size
    )) +
    geom_segment(show.legend = FALSE) +
    coord_polar() +
    scale_y_continuous(expand = c(10, 0)) +
    scale_x_continuous(expand = c(0, 10)) + 
    scale_colour_gradientn(colours = palette) + 
    scale_size(range = c(100, 10)) + 
    theme_void()
}

polar_art(
  seed = 4, 
  n = 65, 
  palette = c("deeppink4", "navyblue", "darkgoldenrod")
)
```
**I think that for this exercise, we are naming files with version numbers because they are all very similar and related. We are also using the code in one file to walk us through the code in another, slightly altered file. It allows it to be more accessible in the work that we are doing and it also helps with simplicity and might make it easier to recover a file that was lost. **

#### 3. Exercise 3
```{r}
library(ggthemes)
library(scales)

# the original function from the first session
sample_canva <- function(seed = NULL) {
  if(!is.null(seed)) set.seed(seed)
  sample(ggthemes::canva_palettes, 1)[[1]]
}

show_col(sample_canva())
```

#### 4. Exercise 4
```{r}

```

#### Art of your choice: tricks

Choose one: spatial noise tricks, polygon tricks, shading tricks  
Complete all exercises. Again, annotate your code.  

```{r}




```

#### Art of your choice: iteration, tiles, pixels  

Choose one: iterated function systems, tiles and tessellations, pixel filters.  
Complete all exercises. Again, annotate your code.

```{r}




```

#### Creating 3 art pieces

Create 3 art pieces that combines elements of what you learned from parts b-d. For each piece, write an accompanying caption that includes:  

- The title of your piece  
- The date you created it  
- A 2-3 sentence description of your inspiration  
- A 2-3 sentence description of what _specific components_ from each part (b-d) you drew from to create the piece

```{r}




```

```{r}





```

```{r}




```

#### Summary

lastly: a 8-10 sentence summary at the end about your process: What was new for you? What was familiar? What did you learn? How did following the exercises/tutorials go for you?

**enter answer here**